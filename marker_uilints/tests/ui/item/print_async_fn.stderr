warning: printing item with body
 --> $DIR/print_async_fn.rs:1:10
  |
1 | async fn print_with_body_foo() -> u8 {
  |          ^^^^^^^^^^^^^^^^^^^
  |
  = note: Item: Fn(
              FnItem {
                  data: CommonItemData {
                      id: ItemId(..),
                      span: SpanId(..),
                      vis: Visibility {
                          _lifetime: PhantomData<&()>,
                          span: None,
                          kind: Default(
                              ItemId(..),
                          ),
                      },
                      ident: Ident {
                          name: "print_with_body_foo",
                          span: $DIR/print_async_fn.rs:1:10 - 1:29,
                      },
                  },
                  generics: GenericParams {
                      params: [],
                      clauses: [],
                  },
                  constness: NotConst,
                  syncness: Async,
                  safety: Safe,
                  is_extern: false,
                  has_self: false,
                  abi: Default,
                  params: [],
                  return_ty: Some(
                      Num(
                          NumTy {
                              data: CommonSynTyData {
                                  _lifetime: PhantomData<&()>,
                                  span: SpanId(..),
                              },
                              numeric_kind: U8,
                          },
                      ),
                  ),
                  body_id: Some(
                      BodyId(..),
                  ),
              },
          )
  = note: Body: Body {
              owner: ItemId(..),
              expr: Block(
                  BlockExpr {
                      data: CommonExprData {
                          _lifetime: PhantomData<&()>,
                          id: ExprId(..),
                          span: SpanId(..),
                      },
                      stmts: [],
                      expr: Some(
                          IntLit(
                              IntLitExpr {
                                  data: CommonExprData {
                                      _lifetime: PhantomData<&()>,
                                      id: ExprId(..),
                                      span: SpanId(..),
                                  },
                                  value: 16,
                                  suffix: None,
                              },
                          ),
                      ),
                      label: None,
                      safety: Safe,
                      syncness: Sync,
                      capture_kind: Default,
                  },
              ),
          }
  = note: `#[warn(marker::marker_uilints::test_lint)]` on by default

warning: printing item with body
 --> $DIR/print_async_fn.rs:9:10
  |
9 | async fn print_with_body_bar() -> u8 {
  |          ^^^^^^^^^^^^^^^^^^^
  |
  = note: Item: Fn(
              FnItem {
                  data: CommonItemData {
                      id: ItemId(..),
                      span: SpanId(..),
                      vis: Visibility {
                          _lifetime: PhantomData<&()>,
                          span: None,
                          kind: Default(
                              ItemId(..),
                          ),
                      },
                      ident: Ident {
                          name: "print_with_body_bar",
                          span: $DIR/print_async_fn.rs:9:10 - 9:29,
                      },
                  },
                  generics: GenericParams {
                      params: [],
                      clauses: [],
                  },
                  constness: NotConst,
                  syncness: Async,
                  safety: Safe,
                  is_extern: false,
                  has_self: false,
                  abi: Default,
                  params: [],
                  return_ty: Some(
                      Num(
                          NumTy {
                              data: CommonSynTyData {
                                  _lifetime: PhantomData<&()>,
                                  span: SpanId(..),
                              },
                              numeric_kind: U8,
                          },
                      ),
                  ),
                  body_id: Some(
                      BodyId(..),
                  ),
              },
          )
  = note: Body: Body {
              owner: ItemId(..),
              expr: Block(
                  BlockExpr {
                      data: CommonExprData {
                          _lifetime: PhantomData<&()>,
                          id: ExprId(..),
                          span: SpanId(..),
                      },
                      stmts: [
                          Let(
                              LetStmt {
                                  data: CommonStmtData {
                                      _lifetime: PhantomData<&()>,
                                      id: StmtId(..),
                                      span: SpanId(..),
                                  },
                                  pat: Ident(
                                      IdentPat {
                                          data: CommonPatData {
                                              _lifetime: PhantomData<&()>,
                                              span: SpanId(..),
                                          },
                                          name: SymbolId(..),
                                          var: VarId(..),
                                          mutability: Unmut,
                                          is_ref: false,
                                          binding_pat: None,
                                      },
                                  ),
                                  ty: Some(
                                      Num(
                                          NumTy {
                                              data: CommonSynTyData {
                                                  _lifetime: PhantomData<&()>,
                                                  span: SpanId(..),
                                              },
                                              numeric_kind: U8,
                                          },
                                      ),
                                  ),
                                  init: Some(
                                      Await(
                                          AwaitExpr {
                                              data: CommonExprData {
                                                  _lifetime: PhantomData<&()>,
                                                  id: ExprId(..),
                                                  span: SpanId(..),
                                              },
                                              expr: Call(
                                                  CallExpr {
                                                      data: CommonExprData {
                                                          _lifetime: PhantomData<&()>,
                                                          id: ExprId(..),
                                                          span: SpanId(..),
                                                      },
                                                      operand: Path(
                                                          PathExpr {
                                                              data: CommonExprData {
                                                                  _lifetime: PhantomData<&()>,
                                                                  id: ExprId(..),
                                                                  span: SpanId(..),
                                                              },
                                                              path: AstQPath {
                                                                  self_ty: None,
                                                                  path_ty: None,
                                                                  path: AstPath {
                                                                      segments: [
                                                                          AstPathSegment {
                                                                              ident: Ident {
                                                                                  name: "foo",
                                                                                  span: $DIR/print_async_fn.rs:10:17 - 10:20,
                                                                              },
                                                                              generics: GenericArgs {
                                                                                  args: [],
                                                                              },
                                                                          },
                                                                      ],
                                                                  },
                                                                  target: Item(
                                                                      ItemId(..),
                                                                  ),
                                                              },
                                                          },
                                                      ),
                                                      args: [],
                                                  },
                                              ),
                                          },
                                      ),
                                  ),
                                  els: None,
                              },
                          ),
                          Let(
                              LetStmt {
                                  data: CommonStmtData {
                                      _lifetime: PhantomData<&()>,
                                      id: StmtId(..),
                                      span: SpanId(..),
                                  },
                                  pat: Ident(
                                      IdentPat {
                                          data: CommonPatData {
                                              _lifetime: PhantomData<&()>,
                                              span: SpanId(..),
                                          },
                                          name: SymbolId(..),
                                          var: VarId(..),
                                          mutability: Unmut,
                                          is_ref: false,
                                          binding_pat: None,
                                      },
                                  ),
                                  ty: Some(
                                      Num(
                                          NumTy {
                                              data: CommonSynTyData {
                                                  _lifetime: PhantomData<&()>,
                                                  span: SpanId(..),
                                              },
                                              numeric_kind: U8,
                                          },
                                      ),
                                  ),
                                  init: Some(
                                      Await(
                                          AwaitExpr {
                                              data: CommonExprData {
                                                  _lifetime: PhantomData<&()>,
                                                  id: ExprId(..),
                                                  span: SpanId(..),
                                              },
                                              expr: Call(
                                                  CallExpr {
                                                      data: CommonExprData {
                                                          _lifetime: PhantomData<&()>,
                                                          id: ExprId(..),
                                                          span: SpanId(..),
                                                      },
                                                      operand: Path(
                                                          PathExpr {
                                                              data: CommonExprData {
                                                                  _lifetime: PhantomData<&()>,
                                                                  id: ExprId(..),
                                                                  span: SpanId(..),
                                                              },
                                                              path: AstQPath {
                                                                  self_ty: None,
                                                                  path_ty: None,
                                                                  path: AstPath {
                                                                      segments: [
                                                                          AstPathSegment {
                                                                              ident: Ident {
                                                                                  name: "foo",
                                                                                  span: $DIR/print_async_fn.rs:11:17 - 11:20,
                                                                              },
                                                                              generics: GenericArgs {
                                                                                  args: [],
                                                                              },
                                                                          },
                                                                      ],
                                                                  },
                                                                  target: Item(
                                                                      ItemId(..),
                                                                  ),
                                                              },
                                                          },
                                                      ),
                                                      args: [],
                                                  },
                                              ),
                                          },
                                      ),
                                  ),
                                  els: None,
                              },
                          ),
                          Let(
                              LetStmt {
                                  data: CommonStmtData {
                                      _lifetime: PhantomData<&()>,
                                      id: StmtId(..),
                                      span: SpanId(..),
                                  },
                                  pat: Ident(
                                      IdentPat {
                                          data: CommonPatData {
                                              _lifetime: PhantomData<&()>,
                                              span: SpanId(..),
                                          },
                                          name: SymbolId(..),
                                          var: VarId(..),
                                          mutability: Unmut,
                                          is_ref: false,
                                          binding_pat: None,
                                      },
                                  ),
                                  ty: Some(
                                      Num(
                                          NumTy {
                                              data: CommonSynTyData {
                                                  _lifetime: PhantomData<&()>,
                                                  span: SpanId(..),
                                              },
                                              numeric_kind: U8,
                                          },
                                      ),
                                  ),
                                  init: Some(
                                      Await(
                                          AwaitExpr {
                                              data: CommonExprData {
                                                  _lifetime: PhantomData<&()>,
                                                  id: ExprId(..),
                                                  span: SpanId(..),
                                              },
                                              expr: Call(
                                                  CallExpr {
                                                      data: CommonExprData {
                                                          _lifetime: PhantomData<&()>,
                                                          id: ExprId(..),
                                                          span: SpanId(..),
                                                      },
                                                      operand: Path(
                                                          PathExpr {
                                                              data: CommonExprData {
                                                                  _lifetime: PhantomData<&()>,
                                                                  id: ExprId(..),
                                                                  span: SpanId(..),
                                                              },
                                                              path: AstQPath {
                                                                  self_ty: None,
                                                                  path_ty: None,
                                                                  path: AstPath {
                                                                      segments: [
                                                                          AstPathSegment {
                                                                              ident: Ident {
                                                                                  name: "foo",
                                                                                  span: $DIR/print_async_fn.rs:12:17 - 12:20,
                                                                              },
                                                                              generics: GenericArgs {
                                                                                  args: [],
                                                                              },
                                                                          },
                                                                      ],
                                                                  },
                                                                  target: Item(
                                                                      ItemId(..),
                                                                  ),
                                                              },
                                                          },
                                                      ),
                                                      args: [],
                                                  },
                                              ),
                                          },
                                      ),
                                  ),
                                  els: None,
                              },
                          ),
                      ],
                      expr: Some(
                          BinaryOp(
                              BinaryOpExpr {
                                  data: CommonExprData {
                                      _lifetime: PhantomData<&()>,
                                      id: ExprId(..),
                                      span: SpanId(..),
                                  },
                                  left: BinaryOp(
                                      BinaryOpExpr {
                                          data: CommonExprData {
                                              _lifetime: PhantomData<&()>,
                                              id: ExprId(..),
                                              span: SpanId(..),
                                          },
                                          left: Path(
                                              PathExpr {
                                                  data: CommonExprData {
                                                      _lifetime: PhantomData<&()>,
                                                      id: ExprId(..),
                                                      span: SpanId(..),
                                                  },
                                                  path: AstQPath {
                                                      self_ty: None,
                                                      path_ty: None,
                                                      path: AstPath {
                                                          segments: [
                                                              AstPathSegment {
                                                                  ident: Ident {
                                                                      name: "a",
                                                                      span: $DIR/print_async_fn.rs:13:5 - 13:6,
                                                                  },
                                                                  generics: GenericArgs {
                                                                      args: [],
                                                                  },
                                                              },
                                                          ],
                                                      },
                                                      target: Var(
                                                          VarId(..),
                                                      ),
                                                  },
                                              },
                                          ),
                                          right: Path(
                                              PathExpr {
                                                  data: CommonExprData {
                                                      _lifetime: PhantomData<&()>,
                                                      id: ExprId(..),
                                                      span: SpanId(..),
                                                  },
                                                  path: AstQPath {
                                                      self_ty: None,
                                                      path_ty: None,
                                                      path: AstPath {
                                                          segments: [
                                                              AstPathSegment {
                                                                  ident: Ident {
                                                                      name: "b",
                                                                      span: $DIR/print_async_fn.rs:13:9 - 13:10,
                                                                  },
                                                                  generics: GenericArgs {
                                                                      args: [],
                                                                  },
                                                              },
                                                          ],
                                                      },
                                                      target: Var(
                                                          VarId(..),
                                                      ),
                                                  },
                                              },
                                          ),
                                          kind: Add,
                                      },
                                  ),
                                  right: Path(
                                      PathExpr {
                                          data: CommonExprData {
                                              _lifetime: PhantomData<&()>,
                                              id: ExprId(..),
                                              span: SpanId(..),
                                          },
                                          path: AstQPath {
                                              self_ty: None,
                                              path_ty: None,
                                              path: AstPath {
                                                  segments: [
                                                      AstPathSegment {
                                                          ident: Ident {
                                                              name: "c",
                                                              span: $DIR/print_async_fn.rs:13:13 - 13:14,
                                                          },
                                                          generics: GenericArgs {
                                                              args: [],
                                                          },
                                                      },
                                                  ],
                                              },
                                              target: Var(
                                                  VarId(..),
                                              ),
                                          },
                                      },
                                  ),
                                  kind: Add,
                              },
                          ),
                      ),
                      label: None,
                      safety: Safe,
                      syncness: Sync,
                      capture_kind: Default,
                  },
              ),
          }

warning: printing item with body
  --> $DIR/print_async_fn.rs:16:10
   |
16 | async fn print_with_body_with_lifetime(x: &u8) -> u8 {
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: Item: Fn(
               FnItem {
                   data: CommonItemData {
                       id: ItemId(..),
                       span: SpanId(..),
                       vis: Visibility {
                           _lifetime: PhantomData<&()>,
                           span: None,
                           kind: Default(
                               ItemId(..),
                           ),
                       },
                       ident: Ident {
                           name: "print_with_body_with_lifetime",
                           span: $DIR/print_async_fn.rs:16:10 - 16:39,
                       },
                   },
                   generics: GenericParams {
                       params: [],
                       clauses: [],
                   },
                   constness: NotConst,
                   syncness: Async,
                   safety: Safe,
                   is_extern: false,
                   has_self: false,
                   abi: Default,
                   params: [
                       FnParam {
                           span: SpanId(..),
                           pat: Ident(
                               IdentPat {
                                   data: CommonPatData {
                                       _lifetime: PhantomData<&()>,
                                       span: SpanId(..),
                                   },
                                   name: SymbolId(..),
                                   var: VarId(..),
                                   mutability: Unmut,
                                   is_ref: false,
                                   binding_pat: None,
                               },
                           ),
                           ty: Ref(
                               RefTy {
                                   data: CommonSynTyData {
                                       _lifetime: PhantomData<&()>,
                                       span: SpanId(..),
                                   },
                                   lifetime: None,
                                   mutability: Unmut,
                                   inner_ty: Num(
                                       NumTy {
                                           data: CommonSynTyData {
                                               _lifetime: PhantomData<&()>,
                                               span: SpanId(..),
                                           },
                                           numeric_kind: U8,
                                       },
                                   ),
                               },
                           ),
                       },
                   ],
                   return_ty: Some(
                       Num(
                           NumTy {
                               data: CommonSynTyData {
                                   _lifetime: PhantomData<&()>,
                                   span: SpanId(..),
                               },
                               numeric_kind: U8,
                           },
                       ),
                   ),
                   body_id: Some(
                       BodyId(..),
                   ),
               },
           )
   = note: Body: Body {
               owner: ItemId(..),
               expr: Block(
                   BlockExpr {
                       data: CommonExprData {
                           _lifetime: PhantomData<&()>,
                           id: ExprId(..),
                           span: SpanId(..),
                       },
                       stmts: [],
                       expr: Some(
                           UnaryOp(
                               UnaryOpExpr {
                                   data: CommonExprData {
                                       _lifetime: PhantomData<&()>,
                                       id: ExprId(..),
                                       span: SpanId(..),
                                   },
                                   expr: Path(
                                       PathExpr {
                                           data: CommonExprData {
                                               _lifetime: PhantomData<&()>,
                                               id: ExprId(..),
                                               span: SpanId(..),
                                           },
                                           path: AstQPath {
                                               self_ty: None,
                                               path_ty: None,
                                               path: AstPath {
                                                   segments: [
                                                       AstPathSegment {
                                                           ident: Ident {
                                                               name: "x",
                                                               span: $DIR/print_async_fn.rs:17:6 - 17:7,
                                                           },
                                                           generics: GenericArgs {
                                                               args: [],
                                                           },
                                                       },
                                                   ],
                                               },
                                               target: Var(
                                                   VarId(..),
                                               ),
                                           },
                                       },
                                   ),
                                   kind: Deref,
                               },
                           ),
                       ),
                       label: None,
                       safety: Safe,
                       syncness: Sync,
                       capture_kind: Default,
                   },
               ),
           }

warning: 3 warnings emitted

